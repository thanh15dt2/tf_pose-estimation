import numpy as np
from PIL import Image
import os
import glob 
import matplotlib.pyplot as plt

import cv2
import scipy.spatial.distance as dis
from run import Scoring
scr = Scoring()

path = '/home/dsoft/Music/me/project/tf-pose-estimation/images/donwline_Address.jpeg'
path1 = '/home/dsoft/Music/me/project/tf-pose-estimation/images/faceon_Toe-up.jpeg'
img_list = []
path_list = '/home/dsoft/Music/me/project/tf-pose-estimation/image_test_copy (copy)'

class EventScoring():
    def __init__(self):
        pass

    def set_config(self, id_event):
        """id_event is number of event what is series of golf swing
        Args:
            id_event (int): number of events

        """
        if id_event==0:
            x_right = [0.52, 0.42, 0.46, 0.59, 0.59, 0.57, 0.47, 0.4, 0.34, 0.56, 0.62, 0.64, 0.52, 0.49]
            y_right = [0.18, 0.21, 0.36, 0.17, 0.32, 0.44, 0.46, 0.68, 0.91, 0.45, 0.7, 0.92, 0.08, 0.08]
            key_num = [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17]
        if id_event==1:
            x_right = [0.53, 0.6, 0.47, 0.49, 0.44, 0.41, 0.61, 0.65, 0.7, 0.57, 0.49]
            y_right = [0.19, 0.2, 0.18, 0.48, 0.68, 0.89, 0.48, 0.69, 0.91, 0.11, 0.11]
            key_num = [1, 2, 5, 8, 9, 10, 11, 12, 13, 16, 17]
        if id_event==2:
            x_right = [0.53, 0.6, 0.47, 0.49, 0.44, 0.41, 0.61, 0.65, 0.7, 0.57, 0.49]
            y_right = [0.19, 0.2, 0.18, 0.48, 0.68, 0.89, 0.48, 0.69, 0.91, 0.11, 0.11]
            key_num = [1, 2, 5, 8, 9, 10, 11, 12, 13, 16, 17]
        if id_event==3:
            x_right = [0.52, 0.56, 0.52, 0.45, 0.58, 0.43, 0.34, 0.51, 0.47, 0.43, 0.62, 0.67, 0.73, 0.52, 0.53, 0.56]
            y_right = [0.14, 0.18, 0.17, 0.24, 0.21, 0.26, 0.26, 0.47, 0.68, 0.9, 0.48, 0.69, 0.91, 0.13, 0.13, 0.13]
            key_num = [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17]
        if id_event==4:
            x_right = [0.41, 0.45, 0.39, 0.36, 0.33, 0.51, 0.37, 0.33, 0.43, 0.38, 0.33, 0.54, 0.58, 0.63, 0.4, 0.42, 0.46]
            y_right = [0.16, 0.17, 0.17, 0.14, 0.09, 0.17, 0.22, 0.11, 0.47, 0.67, 0.91, 0.48, 0.69, 0.91, 0.14, 0.14, 0.13]
            key_num = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17]
        if id_event==5:
            x_right = [0.5, 0.56, 0.49, 0.48, 0.36, 0.63, 0.51, 0.36, 0.54, 0.48, 0.39, 0.68, 0.71, 0.72, 0.49, 0.51, 0.56]
            y_right = [0.18, 0.21, 0.2, 0.31, 0.32, 0.22, 0.32, 0.33, 0.48, 0.67, 0.91, 0.48, 0.69, 0.91, 0.17, 0.17, 0.14]
            key_num = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17]
        if id_event==6:
            x_right = [0.38, 0.42, 0.35, 0.36, 0.51, 0.57, 0.58, 0.48, 0.43, 0.29, 0.56, 0.58, 0.6, 0.38, 0.39]
            y_right = [0.14, 0.15, 0.21, 0.26, 0.11, 0.27, 0.39, 0.41, 0.62, 0.87, 0.38, 0.62, 0.88, 0.12, 0.1] 
            key_num = [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17]
        elif id_event==7:
            x_right = [0.39, 0.42, 0.37, 0.47, 0.61, 0.49, 0.59, 0.66, 0.5, 0.46, 0.34, 0.59, 0.59, 0.61, 0.38, 0.39, 0.37, 0.39]
            y_right = [0.17, 0.16, 0.22, 0.29, 0.3, 0.1, 0.19, 0.31, 0.42, 0.63, 0.87, 0.41, 0.69, 0.91, 0.17, 0.14, 0.14, 0.12]
            key_num = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
        return x_right, y_right, key_num

    # def set_config(self, id_event):
    #     """id_event is number of event what is series of golf swing
    #     Args:
    #         id_event (int): number of events

    #     """
    #     if id_event==0:
    #         x_right = [0.5166666666666667, 0.4222222222222222, 0.46111111111111114, 0.5944444444444444, 0.5888888888888889, 0.5722222222222222, 0.4666666666666667, 0.4, 0.3388888888888889, 0.5555555555555556, 0.6166666666666667, 0.6444444444444445, 0.5222222222222223, 0.4888888888888889]
    #         y_right = [0.38333333333333336, 0.43333333333333335, 0.4166666666666667, 0.4388888888888889, 0.37222222222222223, 0.4444444444444444, 0.43333333333333335, 0.38333333333333336, 0.6222222222222222, 0.75, 0.9, 0.6277777777777778, 0.75, 0.8555555555555555, 0.37777777777777777, 0.38333333333333336, 0.3888888888888889, 0.4]
    #     if id_event==1:
    #         x_right = [0.5833333333333334, 0.55, 0.5277777777777778, 0.4222222222222222, 0.45, 0.5777777777777777, 0.45,0.4777777777777778, 0.45, 0.5111111111111111, 0.46111111111111114, 0.4777777777777778, 0.49444444444444446, 0.4444444444444444, 0.5833333333333334, 0.5888888888888889, 0.5777777777777777, 0.5722222222222222]
    #         y_right = [0.38333333333333336, 0.43333333333333335, 0.4166666666666667, 0.4388888888888889, 0.37222222222222223, 0.4444444444444444, 0.43333333333333335, 0.38333333333333336, 0.6222222222222222, 0.75, 0.9, 0.6277777777777778, 0.75, 0.8555555555555555, 0.37777777777777777, 0.38333333333333336, 0.3888888888888889, 0.4]
    #     if id_event==2:
    #         x_right = [0.5833333333333334, 0.55, 0.5277777777777778, 0.4222222222222222, 0.45, 0.5777777777777777, 0.45,0.4777777777777778, 0.45, 0.5111111111111111, 0.46111111111111114, 0.4777777777777778, 0.49444444444444446, 0.4444444444444444, 0.5833333333333334, 0.5888888888888889, 0.5777777777777777, 0.5722222222222222]
    #         y_right = [0.38333333333333336, 0.43333333333333335, 0.4166666666666667, 0.4388888888888889, 0.37222222222222223, 0.4444444444444444, 0.43333333333333335, 0.38333333333333336, 0.6222222222222222, 0.75, 0.9, 0.6277777777777778, 0.75, 0.8555555555555555, 0.37777777777777777, 0.38333333333333336, 0.3888888888888889, 0.4]
    #     if id_event==3:
    #         x_right = [0.5833333333333334, 0.55, 0.5277777777777778, 0.4222222222222222, 0.45, 0.5777777777777777, 0.45,0.4777777777777778, 0.45, 0.5111111111111111, 0.46111111111111114, 0.4777777777777778, 0.49444444444444446, 0.4444444444444444, 0.5833333333333334, 0.5888888888888889, 0.5777777777777777, 0.5722222222222222]
    #         y_right = [0.38333333333333336, 0.43333333333333335, 0.4166666666666667, 0.4388888888888889, 0.37222222222222223, 0.4444444444444444, 0.43333333333333335, 0.38333333333333336, 0.6222222222222222, 0.75, 0.9, 0.6277777777777778, 0.75, 0.8555555555555555, 0.37777777777777777, 0.38333333333333336, 0.3888888888888889, 0.4]
    #     if id_event==4:
    #         x_right = [0.5833333333333334, 0.55, 0.5277777777777778, 0.4222222222222222, 0.45, 0.5777777777777777, 0.45,0.4777777777777778, 0.45, 0.5111111111111111, 0.46111111111111114, 0.4777777777777778, 0.49444444444444446, 0.4444444444444444, 0.5833333333333334, 0.5888888888888889, 0.5777777777777777, 0.5722222222222222]
    #         y_right = [0.38333333333333336, 0.43333333333333335, 0.4166666666666667, 0.4388888888888889, 0.37222222222222223, 0.4444444444444444, 0.43333333333333335, 0.38333333333333336, 0.6222222222222222, 0.75, 0.9, 0.6277777777777778, 0.75, 0.8555555555555555, 0.37777777777777777, 0.38333333333333336, 0.3888888888888889, 0.4]
    #     if id_event==5:
    #         x_right = [0.5833333333333334, 0.55, 0.5277777777777778, 0.4222222222222222, 0.45, 0.5777777777777777, 0.45,0.4777777777777778, 0.45, 0.5111111111111111, 0.46111111111111114, 0.4777777777777778, 0.49444444444444446, 0.4444444444444444, 0.5833333333333334, 0.5888888888888889, 0.5777777777777777, 0.5722222222222222]
    #         y_right = [0.38333333333333336, 0.43333333333333335, 0.4166666666666667, 0.4388888888888889, 0.37222222222222223, 0.4444444444444444, 0.43333333333333335, 0.38333333333333336, 0.6222222222222222, 0.75, 0.9, 0.6277777777777778, 0.75, 0.8555555555555555, 0.37777777777777777, 0.38333333333333336, 0.3888888888888889, 0.4]
    #     if id_event==6:
    #         x_right = [0.5833333333333334, 0.55, 0.5277777777777778, 0.4222222222222222, 0.45, 0.5777777777777777, 0.45,0.4777777777777778, 0.45, 0.5111111111111111, 0.46111111111111114, 0.4777777777777778, 0.49444444444444446, 0.4444444444444444, 0.5833333333333334, 0.5888888888888889, 0.5777777777777777, 0.5722222222222222]
    #         y_right = [0.38333333333333336, 0.43333333333333335, 0.4166666666666667, 0.4388888888888889, 0.37222222222222223, 0.4444444444444444, 0.43333333333333335, 0.38333333333333336, 0.6222222222222222, 0.75, 0.9, 0.6277777777777778, 0.75, 0.8555555555555555, 0.37777777777777777, 0.38333333333333336, 0.3888888888888889, 0.4]
    #     elif id_event==7:
    #         x_right = [0.5833333333333334, 0.55, 0.5277777777777778, 0.4222222222222222, 0.45, 0.5777777777777777, 0.45,0.4777777777777778, 0.45, 0.5111111111111111, 0.46111111111111114, 0.4777777777777778, 0.49444444444444446, 0.4444444444444444, 0.5833333333333334, 0.5888888888888889, 0.5777777777777777, 0.5722222222222222]
    #         y_right = [0.38333333333333336, 0.43333333333333335, 0.4166666666666667, 0.4388888888888889, 0.37222222222222223, 0.4444444444444444, 0.43333333333333335, 0.38333333333333336, 0.6222222222222222, 0.75, 0.9, 0.6277777777777778, 0.75, 0.8555555555555555, 0.37777777777777777, 0.38333333333333336, 0.3888888888888889, 0.4]
    #     return x_right, y_right

    def load_list(self, folder):
        images = []
        for filename in sorted(os.listdir(folder)):
            img = cv2.imread(os.path.join(folder, filename))
            if img is not None:
                print('path {}'.format(os.path.join(folder, filename)))
                images.append(img)
        return np.asarray(images)

    def score_infer(self, path):
        img_list = self.load_list(path)
        fig = plt.figure()
        for idx, img in enumerate(img_list):
            list_score = []
            print('image shape {}'.format(img.shape))
            img = Image.fromarray(img)
            print('image type {} and mode {}'.format(type(img), img.mode))
            # get vector from pose estimation
            img, x_vector, y_vector, number_keypoint = scr.score(img, idx)

            score = self.cosine_distane(x_vector, y_vector, idx, number_keypoint)
            list_score.append(score)
            a = fig.add_subplot(2, 4, idx + 1)
            a.set_title('score' + str(score))
            plt.imshow(img)
        plt.show()

    def cosine_distane(self, x_vector, y_vector, event, number_keypoint):
        """caculate score from vector_a, vector_b
        Args:
            x_vector (list): included x of point 
            y_vector (list): included y of point 
            event (int)): id of event 
        """
        
        event_score = []
        x_right_keypoint = []
        y_right_keypoint = []
        x_vector_keypoint = []
        y_vector_keypoint = []
        x_right, y_right, key_num_right = self.set_config(event)
        for id, value in enumerate(number_keypoint):
            print(value)
            if value in key_num_right:
                index = key_num_right.index(value)
                x_right_keypoint.append(x_right[index])
                y_right_keypoint.append(y_right[index])
                x_vector_keypoint.append(x_vector[id])
                y_vector_keypoint.append(y_vector[id])

        x_score = 1 - dis.cosine(x_vector_keypoint, x_right_keypoint)
        y_score = 1 - dis.cosine(y_vector_keypoint, y_right_keypoint)
        event_score = (np.average([x_score, y_score]))
        return '%0.2f' % event_score







